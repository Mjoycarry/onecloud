// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by model-api-gen. DO NOT EDIT.

package image

import (
	"yunion.io/x/onecloud/pkg/apis"
)

// SGuestImage is an autogenerated struct via yunion.io/x/onecloud/pkg/image/models.SGuestImage.
type SGuestImage struct {
	apis.SSharableVirtualResourceBase
	Protected *bool `json:"omitempty,protected"`
}

// SGuestImageJoint is an autogenerated struct via yunion.io/x/onecloud/pkg/image/models.SGuestImageJoint.
type SGuestImageJoint struct {
	apis.SJointResourceBase
	GuestImageId string `json:"guest_image_id"`
	ImageId      string `json:"image_id"`
}

// SImage is an autogenerated struct via yunion.io/x/onecloud/pkg/image/models.SImage.
type SImage struct {
	apis.SSharableVirtualResourceBase
	Size         int64  `json:"size"`
	Location     string `json:"location"`
	DiskFormat   string `json:"disk_format"`
	Checksum     string `json:"checksum"`
	FastHash     string `json:"fast_hash"`
	Owner        string `json:"owner"`
	MinDiskMB    int32  `json:"min_disk_mb"`
	MinRamMB     int32  `json:"min_ram_mb"`
	Protected    *bool  `json:"omitempty,protected"`
	IsStandard   *bool  `json:"is_standard,omitempty"`
	IsGuestImage *bool  `json:"is_guest_image,omitempty"`
	IsData       *bool  `json:"is_data,omitempty"`
	OssChecksum  string `json:"oss_checksum"`
}

// SImagePeripheral is an autogenerated struct via yunion.io/x/onecloud/pkg/image/models.SImagePeripheral.
type SImagePeripheral struct {
	apis.SResourceBase
	Id      int    `json:"id"`
	ImageId string `json:"image_id"`
}
